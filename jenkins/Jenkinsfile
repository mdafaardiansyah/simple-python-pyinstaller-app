node {
    try {
        stage('Preparation') {
            checkout scm
        }
        
        stage('Build') {
            docker.image('python:2-alpine').inside {
                def buildResult = sh(
                    script: '''
                        echo "Starting Build Stage..."
                        python -m py_compile ./sources/add2vals.py ./sources/calc.py
                        echo "Build Stage Completed"
                    ''',
                    returnStatus: true
                )
                
                if (buildResult != 0) {
                    error "Python compilation failed"
                }
            }
        }
        
        stage('Test') {
            docker.image('qnib/pytest').inside {
                def testResult = sh(
                    script: '''
                        echo "Starting Test Stage..."
                        mkdir -p test-reports
                        py.test --verbose --junit-xml test-reports/results.xml ./sources/test_calc.py
                        echo "Test Stage Completed"
                    ''',
                    returnStatus: true
                )
                
                if (testResult != 0) {
                    error "Tests failed"
                }
                
                junit 'test-reports/results.xml'
            }
        }
        
        stage('Manual Approval') {
            input message: 'Lanjutkan ke tahap Deploy?', ok: 'Proceed'
        }
        
        stage('Deploy') {
            echo "Starting deployment to Heroku..."
            
            withCredentials([string(credentialsId: 'HEROKU_API_KEY', variable: 'HEROKU_API_KEY')]) {
                def deployResult = sh(
                    script: '''
                        # Login to Heroku
                        cat > ~/.netrc << EOF
                        machine api.heroku.com
                          login jenkins@example.com
                          password $HEROKU_API_KEY
                        machine git.heroku.com
                          login jenkins@example.com
                          password $HEROKU_API_KEY
                        EOF
                        
                        # Deploy to Heroku
                        git push https://git.heroku.com/dicoding-simple-python.git HEAD:main
                        
                        echo "Application deployed successfully!"
                        echo "Application will run for 1 minute before pipeline proceeds..."
                        sleep 60
                        echo "Application runtime completed"
                    ''',
                    returnStatus: true
                )
                
                if (deployResult != 0) {
                    error "Deployment failed"
                }
            }
        }
        
        // Archive artifacts
        archiveArtifacts artifacts: 'test-reports/*.xml', allowEmptyArchive: true
        
        currentBuild.result = 'SUCCESS'
        echo 'Pipeline completed successfully!'
        
    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        echo 'Pipeline failed!'
        throw e
    }
}